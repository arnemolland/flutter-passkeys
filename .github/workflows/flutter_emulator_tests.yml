name: Build and Test Flutter App

on:
  push:
    branches:
      - main
      - automated-tests
  pull_request:
    branches:
      - main

jobs:
  build-test-android:
    name: Build and Test Flutter App on Android
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/passkeys/passkeys/example

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'

      # Step 3: Install Node.js (for Appium)
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 4: Install Appium and Dependencies
      - name: Install Appium and Test Dependencies
        run: |
          npm install -g appium
          appium driver install --source=npm appium-flutter-driver
          appium driver install uiautomator2
          appium driver install --source npm appium-flutter-integration-driver 

      # Step 5: Install Flutter Dependencies
      - name: Install Flutter Dependencies
        run: |
          dart pub global activate melos
          melos bootstrap
          flutter pub get

      # Step 6: Set up Java (Java 17)
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 7: Enable KVM
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Step 8: Start Appium Server
      - name: Start Appium Server
        run: |
          nohup appium --relaxed-security --port=4567 --address=127.0.0.1 > appium.log 2>&1 & 
          sleep 10

      # Step 9: Start the Emulator & run the tests
      - name: Set Up Android Emulator & Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        env:
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          profile: Nexus 5
          script: |
            adb shell input keyevent 82 &  
            flutter --version
            packages/passkeys/passkeys/example/prepare_google_account.sh

      #Print Appium Logs (if tests fail)
      - name: Print Appium Logs
        if: failure()
        run: |
          echo "Printing Appium logs..."
          cat appium.log